if(grepl(paste0('Week ', as.character(i)),test2$Title, fixed = TRUE)) {
test2$week <- i
}
}
# MAIN FUNCTION
for (i in 1:(length(raw_file_names)-1)) {
week <- test_clean(raw_file_names[i+1])
#print(raw_file_names[i+1])
#print(i)
#cleaned_output <- rbind(cleaned_output,week)
test2 <- rbind(test2,week)
i = i+1
}
view(test2)
test2 <- test2[order(week),]
view(test2)
rm(test2)
test2 <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b"))
test2 <- test2[1:20,]
c_names <- pull(test2, 'a')
test2 <- t(test2[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(test2) <- c_names
rm(c_names)
test2 <- as.data.frame(test2)
#clean
colnames(test2)<-gsub(":","",as.character(colnames(test2)))
colnames(test2)<-gsub(" ","_",as.character(colnames(test2)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),test2$Title, fixed = TRUE)) {
test2$week <- i
}
}
# MAIN FUNCTION
for (i in 1:(length(raw_file_names)-1)) {
week <- test_clean(raw_file_names[i+1])
#print(raw_file_names[i+1])
#print(i)
#cleaned_output <- rbind(cleaned_output,week)
test2 <- rbind(test2,week)
i = i+1
}
view(test2)
test2$week <- as.integer(test2$week)
test3 <- test2
test3 <- arrange(test3, week)
view(test3)
test2 <- arrange(test2, week)
view(test2)
ncol(test2)
drops <- c("Email_Campaign_Report", "Title", "Subject_Line", "Delivery_Date/Time", "Overall_Stats", "Total_Recipients",
"Times_Forwarded", "Forwarded_Opens", "Total_Abuse_Complaints", "Times_Liked_on_Facebook", "Clicks_by_URL")
test2 <- test2[ , !(names(test2) %in% drops)]
ncol(test2)
view(test2)
unique_opens <- sub(".*\\ ", '', test2$Recipients_Who_Opened)
unique_opens
unique_opens <- sub(" \\ *", '', test2$Recipients_Who_Opened)
unique_opens
unique_opens <- sub(" \\s*", '', test2$Recipients_Who_Opened)
view(test2)
unique_opens
unique_opens <- sub(" \\(*", '', test2$Recipients_Who_Opened)
view(test2)
unique_opens
unique_opens <- sub(" \\(.*", '', test2$Recipients_Who_Opened)
unique_opens
view(test2)
colnames(test2)
rm(test2)
test2 <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b"))
test2 <- test2[1:20,]
c_names <- pull(test2, 'a')
test2 <- t(test2[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(test2) <- c_names
rm(c_names)
test2 <- as.data.frame(test2)
#clean
colnames(test2)<-gsub(":","",as.character(colnames(test2)))
colnames(test2)<-gsub(" ","_",as.character(colnames(test2)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),test2$Title, fixed = TRUE)) {
test2$week <- i
}
}
test_clean <- function(filename) {
week_df <- read_csv(paste0(raw_path,"/", filename), col_names = c("a", "b"))
week_df <- week_df[1:20,]
#view(week_df)
c_names <- pull(week_df, 'a')
week_df <- t(week_df[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(week_df) <- c_names
rm(c_names)
#print(week_df)
week_df <- as.data.frame(week_df)
colnames(week_df)<-gsub(":","",as.character(colnames(week_df)))
colnames(week_df)<-gsub(" ","_",as.character(colnames(week_df)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),week_df$Title, fixed = TRUE)) {
week_df$week <- i
}
}
return(week_df)
}
# MAIN FUNCTION
for (i in 1:(length(raw_file_names)-1)) {
week <- test_clean(raw_file_names[i+1])
#print(raw_file_names[i+1])
#print(i)
#cleaned_output <- rbind(cleaned_output,week)
test2 <- rbind(test2,week)
i = i+1
}
############ CLEANING
### Drop un-needed columns
drops <- c("Email_Campaign_Report", "Title", "Subject_Line", "Delivery_Date/Time", "Overall_Stats", "Successful_Deliveries",
"Times_Forwarded", "Forwarded_Opens", "Total_Abuse_Complaints", "Times_Liked_on_Facebook", "Clicks_by_URL")
test2 <- test2[ , !(names(test2) %in% drops)]
colnames(test2)
### Manipulate data types
# Week
test2$week <- as.integer(test2$week)
test2 <- arrange(test2, week) #sorts dataframe by week
#
unique_opens <- sub(" \\(.*", '', test2$Recipients_Who_Opened)
unique_opens
cleaned_output$week = factor(cleaned_output$week, levels = c(1:10))
# total_recipients
test2$total_recipients <- sub(" \\(.*", '', test2$Total_Recipients)
test2$total_recipients <- as.integer(test2$total_recipients)
view(test2)
test2$total_recipients <- as.integer(test2$Total_Recipients)
test2$total_recipients <- parse_integer(test2$Total_Recipients)
view(test2)
?parse_integer()
test2$total_recipients <- parse_number(test2$Total_Recipients)
view(test2)
class(test2$total_recipients)
test2$Total_Recipients <- NULL
# bounces
test2$bounces <- sub(" \\(.*", '', test2$Bounces)
test2$bounces <- parse_number(test2$Bounces)
test2$Bounces <- NULL
view(test2)
view(test2)
test2$unique_opens <- parse_number(test2$Recipients_Who_Opened)
view(test2)
test2$unique_opens <- parse_number(test2$unique_opens)
view(test2)
?parse_number
# open_rate
test2$open_rate <- (test2$unique_opens)/(parse_number(test2$Total_Opens))
view(test2)
# open_rate
test2$open_rate <- (test2$unique_opens)/(test2$total_recipients)
view(test2)
# total_opens
test2$total_opens <- parse_number(test2$Total_Opens)
test2$Total_Opens <- NULL
# date_last_open
test2$date_last_open <- parse_date(test2$Last_Open_Date)
view(test2)
test2$Recipients_Who_Opened <- NULL
# date_last_open
blah <- parse_date(test2$Last_Open_Date)
blah
?parse_date
# date_last_open
blah <- parse_date(test2$Last_Open_Date, format = "%m/%d/%Y", trim_ws = TRUE)
# date_last_open
blah <- parse_datetime(test2$Last_Open_Date, trim_ws = TRUE)
blah
# date_last_open
blah <- parse_datetime(test2$Last_Open_Date, trim_ws = FALSE)
blah
# date_last_open
blah <- parse_datetime(test2$Last_Open_Date, trim_ws = TRUE)
# date_last_open
blah <- parse_date(test2$Last_Open_Date, trim_ws = TRUE)
blah
class(test2$Last_Open_Date)
# date_last_open
blah <- parse_date(trim(test2$Last_Open_Date))
blah <- parse_date(trimws(test2$Last_Open_Date))
blah <- trimws(test2$Last_Open_Date)
blah
blah <- parse_date(test2$Last_Open_Date)
problems(...)
problems(...)
# date_last_open
?trimws()
?parse_date
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("\\/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\\", test2$Last_Open_Date)
blah <- parse_date(test2$Last_Open_Date)
?parse_date
blah
class(test2$Last_Open_Date)
view(test2)
test2$Total_Opens <- NULL
# unique_clicks
# click_rate
# total_clicks
# date_last_click
# unsubs
cleaned_output$week = factor(cleaned_output$week, levels = c(1:10))
showme <- parse_integer(test2$Total_Recipients)
view(showme)
view(test2)
# WORKS, BUT WE WANT IT BETTER
week_df <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b"))
week_df <- week_df[1:20,]
week_df$c <- NULL
view(week_df)
c_names <- pull(week_df, 'a')
week_df <- t(week_df[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(week_df) <- c_names
rm(c_names)
#print(week_df)
week_df <- as.data.frame(week_df)
colnames(week_df)<-gsub(":","",as.character(colnames(week_df)))
colnames(week_df)<-gsub(" ","_",as.character(colnames(week_df)))
#week
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),week_df$Title, fixed = TRUE)) {
week_df$week <- i
}
}
test <- clean_week(raw_file_names[1])
view(test)
cleaned_output <- data.frame()
#### EXPERIMENT BEGIN
for (i in 1:length(raw_file_names)) {
week <- clean_week(raw_file_names[i])
cleaned_output <- rbind(cleaned_output,week)
i = i+1
}
raw_file_names
rm(cleaned_output)
view(cleaned_output)
cleaned_output$week = factor(cleaned_output$week, levels = c(1:10))
#### EXPERIMENT OVER
test_str <- raw_file_names[1]
print(test_str)
setwd(raw_path)
# a, b, and c are just dummy variables that won't matter soon
test <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b", "c"))
test <- test[1:20,]
test$c <- NULL
view(test)
test2 <- t(test[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(test2) <- pull(test, 'a')
view(test2)
# rm(test)
test2 <- as.data.frame(test2)
colnames(test2)<-gsub(":","",as.character(colnames(test2)))
colnames(test2)<-gsub(" ","_",as.character(colnames(test2)))
#if(test2$Title
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
##CLEAN WEEK WORKSPACE
test2 <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b"))
test2 <- test2[1:20,]
c_names <- pull(test2, 'a')
test2 <- t(test2[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(test2) <- c_names
rm(c_names)
test2 <- as.data.frame(test2)
#clean
colnames(test2)<-gsub(":","",as.character(colnames(test2)))
colnames(test2)<-gsub(" ","_",as.character(colnames(test2)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),test2$Title, fixed = TRUE)) {
test2$week <- i
}
}
view(test2)
# MAIN FUNCTION
for (i in 1:(length(raw_file_names)-1)) {
week <- test_clean(raw_file_names[i+1])
#print(raw_file_names[i+1])
#print(i)
#cleaned_output <- rbind(cleaned_output,week)
test2 <- rbind(test2,week)
i = i+1
}
############ CLEANING
### Drop un-needed columns
drops <- c("Email_Campaign_Report", "Title", "Subject_Line", "Delivery_Date/Time", "Overall_Stats", "Successful_Deliveries",
"Times_Forwarded", "Forwarded_Opens", "Total_Abuse_Complaints", "Times_Liked_on_Facebook", "Clicks_by_URL")
test2 <- test2[ , !(names(test2) %in% drops)]
colnames(test2)
view(test2)
### Manipulate data types
# week
test2$week <- as.integer(test2$week)
test2 <- arrange(test2, week) #sorts dataframe by week
# total_recipients
#test2$total_recipients <- sub(" \\(.*", '', test2$Total_Recipients)
test2$total_recipients <- parse_number(test2$Total_Recipients)
test2$Total_Recipients <- NULL
# bounces
test2$bounces <- parse_number(test2$Bounces)
test2$Bounces <- NULL
# unique_opens
test2$unique_opens <- parse_number(test2$Recipients_Who_Opened)
test2$Recipients_Who_Opened <- NULL
# open_rate
test2$open_rate <- (test2$unique_opens)/(test2$total_recipients)
# total_opens
test2$total_opens <- parse_number(test2$Total_Opens)
test2$Total_Opens <- NULL
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\\ ", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\\ ", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\\\ ", test2$Last_Open_Date)
blah
blah <- gsub("/", "\\", test2$Last_Open_Date)
blah
blah <- gsub("/", "-", test2$Last_Open_Date)
blah
blah <- parse_date(blah, format = "%m-%d-%Y")
blah
blah <- gsub("/", "-", test2$Last_Open_Date)
blah <- test2$Last_Open_Date
?parse_date
blah
blah <- parse_date(blah, format = "%m/%d/%Y")
blah
blahas.Date(test2$Last_Open_Date)
blah <- as.Date(test2$Last_Open_Date)
blah <- as.Date(test2$Last_Open_Date)
blah
blah <- gsub(" .*", "", test2$Last_Open_Date)
blah
blah <- as.Date(blah)
blah <- parse_date(blah, format = "%m/%d/%Y")
blah
blah2 <- as.Date.character(blah)
blah2
blah <- gsub(" .*", "", test2$Last_Open_Date)
blah2
blah <- gsub(" .*", "", test2$Last_Open_Date)
blah
blah2 <- as.Date.character(blah)
blah
blah2 <- as.Date.character(blah, format = "%m/%d/%Y")
blah2
blah
blah2 <- as.Date.character(blah, format = "%m/%d/%y")
blah2
wee <- as.Date.character(gsub(" .*", "", test2$Last_Open_Date), format = "%m/%d/%y")
wee
class(wee)
# date_last_open
test2$date_last_open <- as.Date.character(gsub(" .*", "", test2$Last_Open_Date), format = "%m/%d/%y")
test2$Last_Open_Date
view(test2)
# unique_clicks
test2$unique_clicks <- parse_number(test2$Recipients_Who_Clicked)
test2$Recipients_Who_Clicked <- NULL
# click_rate
test2$click_rate <- (test2$unique_clicks)/(test2$unique_opens)
# total_clicks
test2$total_clicks <- parse_number(test2$Total_Clicks)
test2$Total_Clicks <- NULL
# date_last_click
test2$date_last_click <- as.Date.character(gsub(" .*", "", test2$Last_Click_Date), format = "%m/%d/%y")
test2$Last_Click_Date
test2$Last_Click_Date <- NULL
# unsubs
test2$unsubs <- parse_number(test2$Total_Unsubs)
test2$Total_Unsubs <- NULL
view(test2)
test2$Last_Open_Date <- NULL
view(test2)
ncol(test2)
rm(test2)
?write_csv()
write_path <- paste0(getwd(),"/clean_data/")
# Loading libraries
library(tidyverse)
library(scales)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
print(paste0("This script (mailchimp_consolidator.r) is stored locally at: ", getwd()))
print(paste0("Setting working directory to: ", getwd()))
raw_path <- paste0(getwd(),"/raw_data/to_be_consolidated")
write_path <- paste0(getwd(),"/clean_data/")
raw_file_names <- list.files(path=raw_path)
print(raw_file_names)
df_pop <- ""
df_quarter <- ""
df_year <- ""
test2 <- read_csv(paste0(raw_path,"/", raw_file_names[1]), col_names = c("a", "b"))
test2 <- test2[1:20,]
c_names <- pull(test2, 'a')
test2 <- t(test2[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(test2) <- c_names
rm(c_names)
test2 <- as.data.frame(test2)
#clean
colnames(test2)<-gsub(":","",as.character(colnames(test2)))
colnames(test2)<-gsub(" ","_",as.character(colnames(test2)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),test2$Title, fixed = TRUE)) {
test2$week <- i
}
}
view(test2)
#global vars
#year
df_year <- sub(".*\\'", '', test2$Title)
#population
df_pop <- case_when(grepl("Eng", test2$Title) ~ 'eng',
grepl("H&S", test2$Title) ~ 'hs',
grepl("Frosh", test2$Title) ~'fs')
#quarter
df_quarter <- case_when(grepl("Autumn", test2$Title) ~ 'aut',
grepl("Winter", test2$Title) ~ 'win',
grepl("Spring", test2$Title) ~'spr')
output_filename <- paste0(df_pop, '_', df_quarter, df_year)
output_filename
test_clean <- function(filename) {
week_df <- read_csv(paste0(raw_path,"/", filename), col_names = c("a", "b"))
week_df <- week_df[1:20,]
#view(week_df)
c_names <- pull(week_df, 'a')
week_df <- t(week_df[,'b']) #we can leave a behind because we'll make that data the colnames
colnames(week_df) <- c_names
rm(c_names)
#print(week_df)
week_df <- as.data.frame(week_df)
colnames(week_df)<-gsub(":","",as.character(colnames(week_df)))
colnames(week_df)<-gsub(" ","_",as.character(colnames(week_df)))
for (i in 1:10) { #indexes to 10 bc we have 10 weeks in the quarter
if(grepl(paste0('Week ', as.character(i)),week_df$Title, fixed = TRUE)) {
week_df$week <- i
}
}
return(week_df)
}
# MAIN FUNCTION
for (i in 1:(length(raw_file_names)-1)) {
week <- test_clean(raw_file_names[i+1])
#print(raw_file_names[i+1])
#print(i)
#cleaned_output <- rbind(cleaned_output,week)
test2 <- rbind(test2,week)
i = i+1
}
############ CLEANING
### Drop un-needed columns
drops <- c("Email_Campaign_Report", "Title", "Subject_Line", "Delivery_Date/Time", "Overall_Stats", "Successful_Deliveries",
"Times_Forwarded", "Forwarded_Opens", "Total_Abuse_Complaints", "Times_Liked_on_Facebook", "Clicks_by_URL")
test2 <- test2[ , !(names(test2) %in% drops)]
test2$week <- as.integer(test2$week)
test2 <- arrange(test2, week) #sorts dataframe by week
# total_recipients
#test2$total_recipients <- sub(" \\(.*", '', test2$Total_Recipients)
test2$total_recipients <- parse_number(test2$Total_Recipients)
test2$Total_Recipients <- NULL
# bounces
test2$bounces <- parse_number(test2$Bounces)
test2$Bounces <- NULL
# unique_opens
test2$unique_opens <- parse_number(test2$Recipients_Who_Opened)
test2$Recipients_Who_Opened <- NULL
# open_rate
test2$open_rate <- (test2$unique_opens)/(test2$total_recipients)
# total_opens
test2$total_opens <- parse_number(test2$Total_Opens)
test2$Total_Opens <- NULL
# date_last_open
test2$date_last_open <- as.Date.character(gsub(" .*", "", test2$Last_Open_Date), format = "%m/%d/%y")
test2$Last_Open_Date <- NULL
view(test2)
# unique_clicks
test2$unique_clicks <- parse_number(test2$Recipients_Who_Clicked)
test2$Recipients_Who_Clicked <- NULL
# click_rate
test2$click_rate <- (test2$unique_clicks)/(test2$unique_opens)
# total_clicks
test2$total_clicks <- parse_number(test2$Total_Clicks)
test2$Total_Clicks <- NULL
# date_last_click
test2$date_last_click <- as.Date.character(gsub(" .*", "", test2$Last_Click_Date), format = "%m/%d/%y")
test2$Last_Click_Date <- NULL
# unsubs
test2$unsubs <- parse_number(test2$Total_Unsubs)
test2$Total_Unsubs <- NULL
view(test2)
output_filename <- paste0(df_pop, '_', df_quarter, df_year, "\.csv")
output_filename
output_filename <- paste0(df_pop, '_', df_quarter, df_year, "\\.csv")
output_filename
output_filename <- paste0(df_pop, '_', df_quarter, df_year, "\.csv")
output_filename <- paste0(df_pop, '_', df_quarter, df_year, ".csv")
output_filename
write_path
write_csv(test2, paste0(write_path, output_filename), row.names = FALSE)
write_csv(test2, paste0(write_path, output_filename), append = FALSE, col_names = TRUE)
